name: Builds and pushes tagged image to Artifactory

on:
  push:
    #tags:
    #  - "v*"
  pull_request:

jobs:
  build_push:
    name: Push image to Artifactory
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to JFrog
        uses: docker/login-action@v1
        with:
          registry: ppro.jfrog.io
          username: ${{ secrets.JF_USER }}
          password: ${{ secrets.JF_PASSWORD }}

      - name: Use Buildx to build image
        uses: docker/setup-buildx-action@v2
      #- name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v1-node16
      #  with:
      #    aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
      #    aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      #    aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      #    role-to-assume: ${{ secrets.AWS_ECR_ROLE }}
      #- name: Docker login
      #  uses: docker/login-action@v2
      #  with:
      #    registry: ${{secrets.AWS_PROD_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com

      #- name: Find Git Tag
      #  run: echo "TAG=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ppro.jfrog.io/delivery-integration-docker/gh-runner:latest

  #build_push_docker_hub:
  #  name: Push image Docker Hub
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v3
  #    - name: Use Buildx to build image
  #      uses: docker/setup-buildx-action@v2
  #    - name: Docker login
  #      uses: docker/login-action@v2
  #      with:
  #        username: ${{ secrets.DOCKERHUB_USERNAME }}
  #        password: ${{ secrets.DOCKERHUB_TOKEN }}
  #    - name: Find Git Tag
  #      run: echo "TAG=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
  #    - name: Docker Build and Push
  #      uses: docker/build-push-action@v4
  #      with:
  #        push: true
  #        tags: |
  #          passeidireto/gh-runner:latest
  #          passeidireto/gh-runner:${{ env.TAG }}

  #trigger-test-workflow:
  #  name: Triggers simple test workflow to ensure everything still working as expected
  #  runs-on: ubuntu-latest
  #  needs: build_push_ecr
  #  steps:
  #    - name: Trigger external action
  #      uses: passeidireto/trigger-external-workflow-action@main
  #      if: success()
  #      with:
  #        repository: PasseiDireto/gh-runner
  #        event: successful_release
  #        github_pat: ${{ secrets.PD_BOT_GITHUB_ACCESS_TOKEN }}
